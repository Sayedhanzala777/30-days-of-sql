-- 1. Create the orders table
CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    product VARCHAR(50),
    quantity INT,
    price INT,
    order_date DATE
);

-- 2. Insert sample rows
INSERT INTO orders (order_id, customer_name, product, quantity, price, order_date) VALUES
(1, 'Ali', 'Laptop', 1, 60000, '2025-09-01'),
(2, 'Sara', 'Mouse', 2, 1500, '2025-09-02'),
(3, 'John', 'Keyboard', 1, 2500, '2025-09-02'),
(4, 'Ali', 'Mouse', 3, 1500, '2025-09-03'),
(5, 'Zara', 'Monitor', 2, 12000, '2025-09-04'),
(6, 'Amir', 'Laptop', 1, 60000, '2025-09-05'),
(7, 'Sara', 'Keyboard', 2, 2500, '2025-09-05'),
(8, 'Bilal', 'Monitor', 1, 12000, '2025-09-06'),
(9, 'Ali', 'Laptop', 1, 60000, '2025-09-07'),
(10, 'Zara', 'Mouse', 5, 1500, '2025-09-08');

-- 3. Queries

-- Total number of orders
SELECT COUNT(*) AS total_orders FROM orders;

-- Total quantity ordered of all products
SELECT SUM(quantity) AS total_quantity FROM orders;

-- Average price of all products
SELECT AVG(price) AS avg_price FROM orders;

-- Maximum and minimum price
SELECT MAX(price) AS max_price, MIN(price) AS min_price FROM orders;

-- Total quantity ordered per product
SELECT product, SUM(quantity) AS total_quantity
FROM orders
GROUP BY product;

-- Total revenue (quantity * price) per product
SELECT product, SUM(quantity * price) AS total_revenue
FROM orders
GROUP BY product;

-- Number of orders placed by each customer
SELECT customer_name, COUNT(*) AS order_count
FROM orders
GROUP BY customer_name;

-- Total revenue generated by each customer
SELECT customer_name, SUM(quantity * price) AS total_revenue
FROM orders
GROUP BY customer_name;

-- Average order value grouped by product
SELECT product, AVG(quantity * price) AS avg_order_value
FROM orders
GROUP BY product;

-- BONUS: Total revenue generated per month
SELECT MONTH(order_date) AS order_month,
       SUM(quantity * price) AS total_revenue
FROM orders
GROUP BY MONTH(order_date);
